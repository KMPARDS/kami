/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import { ValidatorSet } from './ValidatorSet';

export class ValidatorSetFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _seedValidators: string[],
    _testSystemAddress: string,
    overrides?: Overrides
  ): Promise<ValidatorSet> {
    return super.deploy(_seedValidators, _testSystemAddress, overrides || {}) as Promise<
      ValidatorSet
    >;
  }
  getDeployTransaction(
    _seedValidators: string[],
    _testSystemAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_seedValidators, _testSystemAddress, overrides || {});
  }
  attach(address: string): ValidatorSet {
    return super.attach(address) as ValidatorSet;
  }
  connect(signer: Signer): ValidatorSetFactory {
    return super.connect(signer) as ValidatorSetFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ValidatorSet {
    return new Contract(address, _abi, signerOrProvider) as ValidatorSet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_seedValidators',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_testSystemAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: '_parent_hash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address[]',
        name: '_new_set',
        type: 'address[]',
      },
    ],
    name: 'InitiateChange',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BLOCKS_INTERVAL',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LUCK_TRIES',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_VALIDATORS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PERCENT_UNIQUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SYSTEM_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'finalizeChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNextValidators',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getValidators',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initiateChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastFinalizeChangeBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: '_validatorManager',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_MAX_VALIDATORS',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_PERCENT_UNIQUE',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_LUCK_TRIES',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_BLOCKS_INTERVAL',
        type: 'uint256',
      },
    ],
    name: 'setInitialValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'validatorManager',
    outputs: [
      {
        internalType: 'contract ValidatorManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600560005560336001556004600255602860035573fffffffffffffffffffffffffffffffffffffffe600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007957600080fd5b5060405162000e1538038062000e158339818101604052604081101561009e57600080fd5b81019080805160405193929190846401000000008211156100be57600080fd5b838201915060208201858111156100d457600080fd5b82518660208202830111640100000000821117156100f157600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561012857808201518184015260208101905061010d565b505050509050016040526020018051906020019092919050505081600790805190602001906101589291906101ed565b50816009908051906020019061016f9291906101ed565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146101e65780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50506102ba565b828054828255906000526020600020908101928215610266579160200282015b828111156102655782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061020d565b5b5090506102739190610277565b5090565b6102b791905b808211156102b357600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161027d565b5090565b90565b610b4b80620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063752862111161007157806375286211146101da578063add7d01e146101e4578063b327374814610202578063b7ab4db51461020c578063c6f61ed21461026b578063fe55bde9146102d7576100b4565b80633434735f146100b957806340cddab3146101035780634e855fb214610162578063585a80f31461018057806364760fff1461019e578063714897df146101bc575b600080fd5b6100c1610321565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010b610347565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561014e578082015181840152602081019050610133565b505050509050019250505060405180910390f35b61016a6103d5565b6040518082815260200191505060405180910390f35b6101886103db565b6040518082815260200191505060405180910390f35b6101a66103e1565b6040518082815260200191505060405180910390f35b6101c46103e7565b6040518082815260200191505060405180910390f35b6101e26103ed565b005b6101ec6104db565b6040518082815260200191505060405180910390f35b61020a6104e1565b005b610214610713565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561025757808201518184015260208101905061023c565b505050509050019250505060405180910390f35b6102d5600480360360a081101561028157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291905050506107a1565b005b6102df610805565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060088054806020026020016040519081016040528092919081815260200182805480156103cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610381575b5050505050905090565b60025481565b60045481565b60015481565b60005481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f417552613a204f6e6c792073797374656d2063616e2063616c6c00000000000081525060200191505060405180910390fd5b600060088054905011156104d257600860079080546104d0929190610a3a565b505b43600481905550565b60035481565b6000600454141561055a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f417552613a2043616e6e6f7420696e697469617465000000000000000000000081525060200191505060405180910390fd5b6003546004540143116105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f417572613a20546f6f206561726c79000000000000000000000000000000000081525060200191505060405180910390fd5b6105dd61082b565b600060088054905011610658576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f417572613a204e6f2056616c696461746f72730000000000000000000000000081525060200191505060405180910390fd5b60014303407f55252fa6eee4741b4e24a74a70e9c11fd2c2281df8d6ea13126ff845f7825c896008604051808060200182810382528381815481526020019150805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b50509250505060405180910390a26000600481905550565b6060600780548060200260200160405190810160405280929190818152602001828054801561079757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074d575b5050505050905090565b84600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000819055508260018190555081600281905550806003819055505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860006108399190610a8c565b60008090505b60025460005402811015610a37576000546008805490501061086057610a37565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b50eb04b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108cc57600080fd5b505af11580156108e0573d6000803e3d6000fd5b505050506040513d60208110156108f657600080fd5b81019080805190602001909291905050509050600080600090505b6008805490508110156109b657600160005402600260088054905002118061099b57506008818154811061094157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156109a957600191506109b6565b8080600101915050610911565b5080156109c4575050610a2a565b6008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b808060010191505061083f565b50565b828054828255906000526020600020908101928215610a7b5760005260206000209182015b82811115610a7a578254825591600101919060010190610a5f565b5b509050610a889190610aad565b5090565b5080546000825590600052602060002090810190610aaa9190610af0565b50565b610aed91905b80821115610ae957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610ab3565b5090565b90565b610b1291905b80821115610b0e576000816000905550600101610af6565b5090565b9056fea2646970667358221220478c785f78f0586a2524b034f1c8aace755043740667539f9b02b8e41a685c5b64736f6c634300060a0033';
