/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import { DayswappersCore } from "./DayswappersCore";

export class DayswappersCoreFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DayswappersCore {
    return new Contract(address, _abi, signerOrProvider) as DayswappersCore;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "wallet",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newStatus",
        type: "bool"
      }
    ],
    name: "Authorised",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "introducerSeatIndex",
        type: "uint32"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "networkerSeatIndex",
        type: "uint32"
      }
    ],
    name: "Introduce",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "beltIndex",
        type: "uint32"
      }
    ],
    name: "Promotion",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "platform",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "month",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isDefinite",
        type: "bool"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fromTree",
        type: "bool"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256[3]",
        name: "rewardRatio",
        type: "uint256[3]"
      }
    ],
    name: "Reward",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      }
    ],
    name: "SeatTransfer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "platform",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "month",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Volume",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        indexed: true,
        internalType: "bool",
        name: "isDefinite",
        type: "bool"
      },
      {
        indexed: false,
        internalType: "enum IDayswappers.RewardType",
        name: "rewardType",
        type: "uint8"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "month",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint256[3]",
        name: "adjustedRewards",
        type: "uint256[3]"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "dayswappers",
    outputs: [
      {
        internalType: "contract IDayswappers",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "treeReferrals",
        type: "uint32"
      }
    ],
    name: "getBeltIdFromTreeReferrals",
    outputs: [
      {
        internalType: "uint32",
        name: "_newBeltIndex",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      }
    ],
    name: "getMonthlyNRT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      }
    ],
    name: "getSeatByAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "bool",
        name: "kycResolved",
        type: "bool"
      },
      {
        internalType: "uint32",
        name: "incompleteKycResolveSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "depth",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "introducerSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "beltIndex",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      }
    ],
    name: "getSeatByAddressStrict",
    outputs: [
      {
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "bool",
        name: "kycResolved",
        type: "bool"
      },
      {
        internalType: "uint32",
        name: "incompleteKycResolveSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "depth",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "introducerSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "beltIndex",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_seatIndex",
        type: "uint32"
      }
    ],
    name: "getSeatByIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "seatIndex",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "bool",
        name: "kycResolved",
        type: "bool"
      },
      {
        internalType: "uint32",
        name: "incompleteKycResolveSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "depth",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "introducerSeatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "beltIndex",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      }
    ],
    name: "getSeatMonthlyDataByAddress",
    outputs: [
      {
        internalType: "uint32",
        name: "treeReferrals",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "volume",
        type: "uint256"
      },
      {
        internalType: "uint256[3]",
        name: "definiteEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "uint256[3]",
        name: "nrtEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      }
    ],
    name: "getSeatMonthlyDataByAddressStrict",
    outputs: [
      {
        internalType: "uint32",
        name: "treeReferrals",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "volume",
        type: "uint256"
      },
      {
        internalType: "uint256[3]",
        name: "definiteEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "uint256[3]",
        name: "nrtEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_seatIndex",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      }
    ],
    name: "getSeatMonthlyDataByIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "treeReferrals",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "volume",
        type: "uint256"
      },
      {
        internalType: "uint256[3]",
        name: "definiteEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "uint256[3]",
        name: "nrtEarnings",
        type: "uint256[3]"
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      }
    ],
    name: "isActiveAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_seatIndex",
        type: "uint32"
      }
    ],
    name: "isActiveSeat",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_username",
        type: "bytes32"
      }
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address"
      }
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_introducer",
        type: "address"
      }
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "kycDapp",
    outputs: [
      {
        internalType: "contract IKycDapp",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "nrtManager",
    outputs: [
      {
        internalType: "contract INRTManager",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint256[3]",
        name: "_rewardRatio",
        type: "uint256[3]"
      }
    ],
    name: "payToIntroducer",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint256[3]",
        name: "_rewardRatio",
        type: "uint256[3]"
      }
    ],
    name: "payToNetworker",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint256[3]",
        name: "_rewardRatio",
        type: "uint256[3]"
      }
    ],
    name: "payToTree",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "prepaidEs",
    outputs: [
      {
        internalType: "contract IPrepaidEs",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      }
    ],
    name: "promoteBelt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "randomnessManager",
    outputs: [
      {
        internalType: "contract RandomnessManager",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_currentNrtMonth",
        type: "uint32"
      }
    ],
    name: "receiveNrt",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "reportVolume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_username",
        type: "bytes32"
      }
    ],
    name: "resolveAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      }
    ],
    name: "resolveIntroducer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      }
    ],
    name: "resolveKyc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address"
      }
    ],
    name: "resolveUsername",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address"
      }
    ],
    name: "resolveUsernameStrict",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networker",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      },
      {
        internalType: "uint256[3]",
        name: "_rewardRatio",
        type: "uint256[3]"
      }
    ],
    name: "rewardToTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "setInitialValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_kycDapp",
        type: "address"
      }
    ],
    name: "setKycDapp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nullWallet",
        type: "address"
      }
    ],
    name: "setNullWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_volumeTarget",
        type: "uint256"
      }
    ],
    name: "setVolumeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "timeallyClub",
    outputs: [
      {
        internalType: "contract ITimeAllyClub",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "timeallyManager",
    outputs: [
      {
        internalType: "contract ITimeAllyManager",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "timeallyPromotionalBucket",
    outputs: [
      {
        internalType: "contract ITimeAllyPromotionalBucket",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "transferSeat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_username",
        type: "bytes32"
      },
      {
        internalType: "bool",
        name: "_newStatus",
        type: "bool"
      }
    ],
    name: "updateAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "validatorManager",
    outputs: [
      {
        internalType: "contract IValidatorManager",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "volumeTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      },
      {
        internalType: "enum IDayswappers.RewardType",
        name: "_rewardType",
        type: "uint8"
      }
    ],
    name: "withdrawDefiniteEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_month",
        type: "uint32"
      },
      {
        internalType: "enum IDayswappers.RewardType",
        name: "_rewardType",
        type: "uint8"
      }
    ],
    name: "withdrawNrtEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
